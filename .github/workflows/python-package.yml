# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# For more information on conda actions see: https://autobencoder.com/2020-08-24-conda-actions/
# Starter workflow for conda: https://github.com/actions/starter-workflows/blob/main/ci/python-package-conda.yml

name: build

on:
  push:
    branches: [ master, actions ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 3
      matrix:
        python-version: [2.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup latex
      run: |
        yes "" | sudo add-apt-repository ppa:jonathonf/texlive
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends
          texlive-fonts-recommended
          texlive-latex-extra
          texlive-latex-recommended
          texlive-publishers
          texlive-generic-recommended
    - name: Setup conda
      run: |
        # Add $CONDA/bin to built-in path
        echo $CONDA/bin >> $GITHUB_PATH
        conda update -q conda
        conda info
    - name: Create conda environment
      run: |
        conda create -q -n env python=${{ matrix.python-version }} numpy nose
    - name: Install package
      run: |
        conda activate env
        python setup.py install
    - name: Lint with flake8
      if: ${{ false }}
      run: |
        conda activate env
        conda install -q flake8 
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. 
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with nose
      run: |
        conda activate env
        nosetests -v --exe tests
